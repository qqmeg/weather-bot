import telebot
import requests
import json
from telebot import types
from plausible_events import PlausibleEvents
from os import getenv


events = PlausibleEvents(domain=getenv("PLAUSIBLE_DOMAIN"), api=getenv("PLAUSIBLE_API"))
bot = telebot.TeleBot(getenv("TELEGRAM_API_KEY").strip())
users = set()


@bot.message_handler(commands=['start'])
def start(message):
    users.add(message.from_user.id)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ, –ø—Ä—è–º–æ –≤ Telegram!')
    bot.reply_to(message, 'C–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É - –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥üèô \n/appendcity - –¥–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É')
    events.pageview(
        '/',
        headers={
            'X-Forwarded-For': str(message.from_user.id),
        },
    )
    print(len(users))


@bot.message_handler(commands=['appendcity'])
def appen(message):
    bot.send_message(message.chat.id, '‚öúÔ∏è–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ—Å—Ç–∏—Ç—å –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ 1 —Å–æ–æ–±—â–µ–Ω–∏–∏, —Ä–∞–∑–¥–µ–ª—è—è –ø—Ä–æ–±–µ–ª–∞–º–∏‚öúÔ∏è')
    bot.register_next_step_handler(message, addcity)


def addcity(message):
    cityapp = message.text.split(' ')
    knopka = types.ReplyKeyboardMarkup()
    for city in cityapp:
        knopkacity = types.KeyboardButton(city)
        knopka.row(knopkacity)
        events.event(
            'append',
            path='/',
            headers={
                'X-Forwarded-For': str(message.from_user.id),
            },
            props={
                "city": city,
            },
        )
    bot.send_message(message.chat.id, '<b>–ì–æ—Ç–æ–≤–æ!</b>üçÉ \n–°–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É - –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥üèô', reply_markup=knopka, parse_mode='html')


@bot.message_handler(content_types='text')
def weather(message):
    city = message.text.strip().lower()
    if city == '–ø–∏—Ç–µ—Ä':
        city = '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥'
    res = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={getenv("OPENWEATHERMAP_KEY")}&units=metric')
    data = json.loads(res.text)
    try:
        temperature = data["main"]["temp"]
        feels = data["main"]["feels_like"]
        smiletemp = ''
        if feels > 22:
            smiletemp = 'üî•'
        elif feels > 15:
            smiletemp = 'üå°Ô∏è'
        elif feels >= 0:
            smiletemp = 'üå´'
        elif feels < 0:
            smiletemp = '‚ùÑÔ∏è '
        smile = ''
        clouds = data['clouds']['all']
        if clouds > 70:
            smile = '‚òÅÔ∏è '
        elif clouds > 35:
            smile = "‚õÖÔ∏è"
        elif clouds >= 0:
            smile = '‚òÄÔ∏è '
        events.event(
            'weather',
            path='/',
            headers={
                'X-Forwarded-For': str(message.from_user.id),
            },
            props={
                "city": city,
            },
        )
        bot.reply_to(message, f'–°–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞: {temperature}¬∞C {smile}, –æ—â—É—â–∞–µ—Ç—Å—è, –∫–∞–∫ {round(feels, 1)}¬∞C{smiletemp}')
    except KeyError:
        bot.send_message(message.chat.id, '–ì–æ—Ä–æ–¥ –≤–≤–µ–¥–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ª–∏–±–æ —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞üòï.')


bot.infinity_polling()
